{"version":3,"sources":["barley-break.js","app.js"],"names":["Point","number","DOMpointer","num","innerText","classList","remove","add","color","Field","$container","emptyPoint","createGame","insertAdjacentHTML","$field","querySelector","$info","rndPoints","getRandomizedPoints","values","i","pointNum","next","value","points","initField","querySelectorAll","forEach","elem","index","pointStyles","addEventListener","ev","setNumber","fadeOut","fadeIn","checkForWin","winGame","pointNumbers","Set","size","Math","round","random","style","background","restartGame","bind","document"],"mappings":";AAAA,aAgKG,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EA9JGA,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,EAAQC,GAAY,EAAA,KAAA,GACzBD,KAAAA,OAASA,EACTC,KAAAA,WAAaA,EA2JnB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YAxJD,MAAA,WACS,OAAA,KAAKD,SAuJb,CAAA,IAAA,YApJD,MAAA,SAAUE,GACHD,KAAAA,WAAWE,UAAYD,EACvBF,KAAAA,OAASE,IAkJf,CAAA,IAAA,UA/ID,MAAA,WACOD,KAAAA,WAAWG,UAAUC,OAAO,KAAKJ,WAAWG,UAAU,IACtDH,KAAAA,WAAWG,UAAUE,IAAI,kBA6I/B,CAAA,IAAA,SA1ID,MAAA,SAAOC,GACAN,KAAAA,WAAWG,UAAUC,OAAO,gBAC5BJ,KAAAA,WAAWG,UAAUE,IAAIC,OAwI/B,EA9JGR,GA0BOS,EAAAA,WACCC,SAAAA,EAAAA,GAAY,EAAA,KAAA,GAKV,EAAA,KAAA,cAAA,CACZ,QACA,cACA,cACA,aACA,SACA,SACA,aACA,aACA,WACA,WACA,QACA,gBACA,QACA,YACA,gBAGO,EAAA,KAAA,SAAA,CACPC,WAAY,KAvBPD,KAAAA,WAAaA,EACbE,KAAAA,aAiIN,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAxGD,MAAA,WACOF,KAAAA,WAAWG,mBAAmB,YAAa,6BAC3CH,KAAAA,WAAWG,mBAAmB,YAAa,sCAC3CC,KAAAA,OAAS,KAAKJ,WAAWK,cAAc,UACvCC,KAAAA,MAAQ,KAAKN,WAAWK,cAAc,SAItC,IAFDE,IAAAA,EAAY,KAAKC,sBAAsBC,SAElCC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACrBC,IAAAA,EAAWJ,EAAUK,OAAOC,MAC7BT,KAAAA,OAAOD,mBAAmB,YAAyCQ,4BAAAA,OAAAA,EAAxE,WACKG,KAAAA,OAAeJ,QAAAA,OAAAA,IAAO,IAAIpB,EAAMqB,EAAU,MAG5CP,KAAAA,OAAOD,mBAAmB,YAA/B,gDACKW,KAAAA,OAAe,QAAA,OAAA,KAAQ,IAAIxB,EAAM,EAAG,MAEpCyB,KAAAA,cAuFN,CAAA,IAAA,YApFD,MAAA,WAAY,IAAA,EAAA,KACS,KAAKX,OAAOY,iBAAiB,gBAErCC,QAAQ,SAACC,EAAMC,GACxB,EAAKL,OAAeK,QAAAA,OAAAA,IAAS3B,WAAa0B,EAEtCC,EAAQ,IACV,EAAKL,OAAeK,QAAAA,OAAAA,IAAS3B,WAAWG,UAAUE,IAChD,EAAKuB,YAAY,EAAKN,OAAeK,QAAAA,OAAAA,IAAS5B,OAAS,IAI3D,EAAKuB,OAAeK,QAAAA,OAAAA,IAAS3B,WAAW6B,iBAAiB,QAAS,SAACC,GAE/D,GAAA,EAAKR,OAAOb,YAAckB,EAAQ,GAClC,EAAKL,OAAOb,YAAckB,EAAQ,GAClC,EAAKL,OAAOb,YAAckB,EAAQ,GAClC,EAAKL,OAAOb,YAAckB,EAAQ,EAClC,CACA,EAAKL,OAAe,QAAA,OAAA,EAAKA,OAAOb,aAAcsB,UAC5C,EAAKT,OAAeK,QAAAA,OAAAA,IAAS5B,QAEzBO,IAAAA,EAAQ,EAAKgB,OAAeK,QAAAA,OAAAA,IAAS3B,WAAWG,UAAU,GAEhE,EAAKmB,OAAeK,QAAAA,OAAAA,IAASK,UAC7B,EAAKV,OAAe,QAAA,OAAA,EAAKA,OAAOb,aAAcwB,OAAO3B,GACrD,EAAKgB,OAAOb,WAAakB,EACzB,EAAKL,OAAeK,QAAAA,OAAAA,IAAS5B,OAAS,EAElC,EAAKmC,eACP,EAAKC,iBAsDd,CAAA,IAAA,sBA/CD,MAAA,WAESC,IADDA,IAAAA,EAAe,IAAIC,IAClBD,EAAaE,KAAO,IACzBF,EAAa/B,IAAIkC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAE7CL,OAAAA,IA0CR,CAAA,IAAA,cAvCD,MAAA,WACO,IAAA,IAAIlB,EAAI,EAAGA,EAAI,GAAIA,IAClB,GAAE,KAAKI,OAAeJ,QAAAA,OAAAA,IAAKnB,QAAUmB,EAAI,EACpC,OAAA,EAGJ,OAAA,IAiCR,CAAA,IAAA,UA9BD,MAAA,WACOJ,KAAAA,MAAM4B,MAAMC,WAAa,UACzB7B,KAAAA,MAAMZ,UAAY,WAClBY,KAAAA,MAAMe,iBAAiB,QAAS,KAAKe,YAAYC,KAAK,SA2B5D,CAAA,IAAA,cAxBD,MAAA,WACM,GAAA,KAAKX,cAAe,CACjBpB,KAAAA,MAAM4B,MAAMC,WAAa,YACzB7B,KAAAA,MAAMZ,UAAY,aAIlB,IAFDa,IAAAA,EAAY,KAAKC,sBAAsBC,SAElCC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACrBC,IAAAA,EAAWJ,EAAUK,OAAOC,MAC7BC,KAAAA,OAAeJ,QAAAA,OAAAA,IAAKlB,WAAWG,UAAUC,OAC5C,KAAKkB,OAAeJ,QAAAA,OAAAA,IAAKlB,WAAWG,UAAU,IAE5Ce,EAAI,IACDI,KAAAA,OAAeJ,QAAAA,OAAAA,IAAKlB,WAAWG,UAAUE,IAAI,KAAKuB,YAAYT,EAAW,IACzEG,KAAAA,OAAeJ,QAAAA,OAAAA,IAAKlB,WAAWE,UAAYiB,EAC3CG,KAAAA,OAAeJ,QAAAA,OAAAA,IAAKnB,OAASoB,IAE7BG,KAAAA,OAAeJ,QAAAA,OAAAA,IAAKlB,WAAWG,UAAUE,IAAI,gBAC7CiB,KAAAA,OAAeJ,QAAAA,OAAAA,IAAKlB,WAAWE,UAAY,IAI/CoB,KAAAA,OAAOb,WAAa,QAE5B,EApIUF,GAoIV,QAAA,MAAA;;AChKH,aACA,IAAA,EAAA,QAAA,kBAEMC,EAAasC,SAASjC,cAAc,cAE1C,IAAIN,EAAJ,MAAUC","file":"app.c328ef1a.js","sourceRoot":"../src","sourcesContent":["'use strict'\n\nclass Point {\n  constructor(number, DOMpointer) {\n    this.number = number\n    this.DOMpointer = DOMpointer\n  }\n\n  getNumber() {\n    return this.number\n  }\n\n  setNumber(num) {\n    this.DOMpointer.innerText = num\n    this.number = num\n  }\n\n  fadeOut() {\n    this.DOMpointer.classList.remove(this.DOMpointer.classList[1])\n    this.DOMpointer.classList.add('point--empty')\n  }\n\n  fadeIn(color) {\n    this.DOMpointer.classList.remove('point--empty')\n    this.DOMpointer.classList.add(color)\n  }\n}\n\nexport class Field {\n  constructor($container) {\n    this.$container = $container\n    this.createGame()\n  }\n\n  pointStyles = [\n    'brown',\n    'light-brown',\n    'light-green',\n    'light-blue',\n    'orange',\n    'violet',\n    'dark-khaki',\n    'aquamarine',\n    'darkpink',\n    'deeppink',\n    'lemon',\n    'darkslateblue',\n    'salad',\n    'orangered',\n    'springgreen',\n  ]\n\n  points = {\n    emptyPoint: 15,\n  }\n\n  createGame() {\n    this.$container.insertAdjacentHTML('beforeend', '<div class=\"field\"></div>')\n    this.$container.insertAdjacentHTML('beforeend', '<div class=\"info\">Playing...</div>')\n    this.$field = this.$container.querySelector('.field')\n    this.$info = this.$container.querySelector('.info')\n\n    let rndPoints = this.getRandomizedPoints().values()\n\n    for (let i = 0; i < 15; i++) {\n      const pointNum = rndPoints.next().value\n      this.$field.insertAdjacentHTML('beforeend', `<div class=\"field-point\">${pointNum}</div>`)\n      this.points[`point${i}`] = new Point(pointNum, null)\n    }\n\n    this.$field.insertAdjacentHTML('beforeend', `<div class=\"field-point point--empty\"></div>`)\n    this.points[`point${15}`] = new Point(0, null)\n\n    this.initField()\n  }\n\n  initField() {\n    const pointsList = this.$field.querySelectorAll('.field-point')\n\n    pointsList.forEach((elem, index) => {\n      this.points[`point${index}`].DOMpointer = elem\n\n      if (index < 15) {\n        this.points[`point${index}`].DOMpointer.classList.add(\n          this.pointStyles[this.points[`point${index}`].number - 1]\n        )\n      }\n\n      this.points[`point${index}`].DOMpointer.addEventListener('click', (ev) => {\n        if (\n          this.points.emptyPoint == index + 1 ||\n          this.points.emptyPoint == index - 1 ||\n          this.points.emptyPoint == index + 4 ||\n          this.points.emptyPoint == index - 4\n        ) {\n          this.points[`point${this.points.emptyPoint}`].setNumber(\n            this.points[`point${index}`].number\n          )\n          const color = this.points[`point${index}`].DOMpointer.classList[1]\n\n          this.points[`point${index}`].fadeOut()\n          this.points[`point${this.points.emptyPoint}`].fadeIn(color)\n          this.points.emptyPoint = index\n          this.points[`point${index}`].number = 0\n\n          if (this.checkForWin()) {\n            this.winGame()\n          }\n        }\n      })\n    })\n  }\n\n  getRandomizedPoints() {\n    const pointNumbers = new Set()\n    while (pointNumbers.size < 15) {\n      pointNumbers.add(Math.round(Math.random() * 14) + 1)\n    }\n    return pointNumbers\n  }\n\n  checkForWin() {\n    for (let i = 0; i < 15; i++) {\n      if (!(this.points[`point${i}`].number == i + 1)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  winGame() {\n    this.$info.style.background = '#33ff33'\n    this.$info.innerText = 'You win!'\n    this.$info.addEventListener('click', this.restartGame.bind(this))\n  }\n\n  restartGame() {\n    if (this.checkForWin()) {\n      this.$info.style.background = '#ffee008c'\n      this.$info.innerText = 'Playing...'\n\n      let rndPoints = this.getRandomizedPoints().values()\n\n      for (let i = 0; i < 16; i++) {\n        const pointNum = rndPoints.next().value\n        this.points[`point${i}`].DOMpointer.classList.remove(\n          this.points[`point${i}`].DOMpointer.classList[1]\n        )\n        if (i < 15) {\n          this.points[`point${i}`].DOMpointer.classList.add(this.pointStyles[pointNum - 1])\n          this.points[`point${i}`].DOMpointer.innerText = pointNum\n          this.points[`point${i}`].number = pointNum\n        } else {\n          this.points[`point${i}`].DOMpointer.classList.add('point--empty')\n          this.points[`point${i}`].DOMpointer.innerText = ''\n        }\n      }\n\n      this.points.emptyPoint = 15\n    }\n  }\n}\n","'use strict'\nimport { Field } from './barley-break'\n\nconst $container = document.querySelector('.container')\n\nnew Field($container)\n"]}